/*======================================================================
Имя файла:          EvLog.h
Автор:              Попов И.А.
Версия файла:       01.04
Дата изменения:		20/04/10
Применяемость:      Все типы чипов
Описание:
Библиотека для работы с журналом событий
======================================================================*/

#ifndef EV_LOG_
#define EV_LOG_

#include "std.h"

#ifdef __cplusplus
extern "C" {
#endif

// Структура для работы с журналом событий
typedef struct EV_LOG {
	Bool  Enable;              // Разрешение работы
	Bool  ExecFlag;            // Флаг формирования записи в журнал
	Bool  WriteFlag;           // Флаг записи в память
	Bool  ProfEnable;          // Признак наличия режима профилирования
	Uns	VoltagesCount;			// Количество регистров напряжений SVS.1
	Uns	CurrentsCount;			// Количество регистров токов SVS.1
	Uns   FaultsCount;			// Количество регистров аварий SVS.1
	Uns  *Time;                // Указатель на текущее время
	Uns  *Date;                // Указатель на текущую дату
	Uns  *Status;              // Указатель на статус работы
	Uns   StatusPrev;          // Предыдущее состояние статуса работы
	Uns   StatusMask;				// Маска статусного регистра
	Uns  *CmdValue;            // Указатель на команду в журнала событий
	Uns  *CmdSource;           // Указатель на источник команды
	Int  *Position;            // Указатель на текущее положение
	Uns  *Torque;              // Указатель на момент
	Uns  *Voltages;				// Указатель на напряжения сети
	Uns  *Currents;				// Указатель на токи нагрузки
	Int  *Speed;					// Указатель на частоту вращения
	Int  *Temper;              // Указатель на температуру
	Uns   FaultsState[5];		// Буфер аварий
	Uns   FaultsFiltr[5];		// Буфер для фильтрации аварий
	Uns  *Info;                // Дополнительные параметры
	Uns   InfoCount;           // Количество дополнительных параметров
	Uns  *ProfZone;            // Указатель на зону профилирования
	Int   ProfPosition;        // Параметр для реализации профилирования
	Uns   CmdWord;					// Значение команды для записи в журнал
	Uns   DelayTimer;          // Таймер паузы предварительного запуска
	Uns   DelayTout;				// Таймаут задержки для формирования записи в журнал
	Uns   Data[20];  				// Буфер данных для записи в память
} EV_LOG;

void EvLogUpdate(EV_LOG *);

#ifdef __cplusplus
}
#endif // extern "C"

#endif

